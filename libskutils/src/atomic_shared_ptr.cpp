#include <skutils/atomic_shared_ptr.h>
#include <skutils/multithreading.h>

namespace skutils {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static skutils::multithreading::recursive_mutex_type* g_pRefMutex = nullptr;

skutils::multithreading::recursive_mutex_type& get_ref_mtx() {
    if ( !g_pRefMutex )
        g_pRefMutex =
            new skutils::multithreading::recursive_mutex_type( "RMTX-ATOMIC-SHARED-GLOBAL" );
    return ( *g_pRefMutex );
}

void done_ref_mtx() {
    if ( g_pRefMutex ) {
        delete g_pRefMutex;
        g_pRefMutex = nullptr;
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

};  // namespace skutils

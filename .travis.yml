#------------------------------------------------------------------------------
# TravisCI configuration file for skaled.
#
# The documentation for skaled is hosted at http://skalelabs.org
#
# ------------------------------------------------------------------------------
# This file is part of skaled.
#
# skaled is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skaled is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skaled.  If not, see <http://www.gnu.org/licenses/>
#
# (c) 2019 skaled contributors.
#------------------------------------------------------------------------------

language: cpp
env:
    global:
        - TRAVIS_TESTS=On
matrix:
    include:
        - os: linux
          dist: xenial
          addons:
              apt:
                sources:
                    - ubuntu-toolchain-r-test
                packages:
                    - g++-7
                    - texinfo
                    - lcov
                    - clang-format-6.0
                    - libboost-all-dev
                    - libssl-dev
          env:
              - ZIP_SUFFIX=ubuntu-xenial
              - CMAKE_BUILD_TYPE=Debug
              - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
cache:
    ccache: true
    directories:
        - ~/.ethash
        - ~/.local
        - ~/.hunter
        # Cache whole deps dir hoping you will not need to download and
        # build external dependencies next build.
        - $TRAVIS_BUILD_DIR/build/deps
        - $TRAVIS_BUILD_DIR/SkaleDeps

before_install:
    - eval "${MATRIX_EVAL}"
install:
    - ./SkaleDeps/build.sh
script:
    # configure
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -DCOVERAGE=ON ..

    # check code style
    - make format-check || travis_terminate 1;

    # build
    - make -j$(nproc)

    # run tests
    - cd test
    - ./testeth
    - cd ..
after_success:
    # Create lcov report
    - lcov --capture --directory . --output-file coverage.info
    - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
    - lcov --remove coverage.info 'SkaleDeps/*' --output-file coverage.info # filter dependency files
    - lcov --remove coverage.info '.hunter/*' --output-file coverage.info # filter dependency files
    - lcov --list coverage.info # debug info
    # Uploading report to CodeCov
    - bash <(curl -s https://codecov.io/bash) -f coverage.info -t $CODECOV_TOKEN || echo "Codecov did not collect coverage reports"
